#!/bin/bash
# nimbus revised
# ------------------------------------------------------------
# include custom nimbus action with .nimbus in home directory
# ------------------------------------------------------------
# example_function(){
# }
# # prints custom menu entries
# nimbus_usage_menu(){
#     printf "%$((${COLLUMN0} + ${COLLUMN1}))s\n" " " | tr ' ' '-'
#     printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "example_function" "example menu description"
# }
#
#
CUSTOMNIMBNUS=~/.nimbus
if [[ -f "$CUSTOMNIMBNUS" ]]; then
    source ~/.nimbus
fi
home(){
    activator send libactivator.system.homebutton
    echo Home button.
}
powerdown(){
    activator send libactivator.system.powerdown
    echo Device powered off.
}
sleep(){
    activator send libactivator.system.sleepbutton
    echo Power button.
}
open(){
    activator send $2
    echo App opened.
}
settings(){
    activator send libactivator.settings.$2
    echo Preference page.
}
cc(){
    activator send libactivator.system.activate-control-center
    echo Control Center.
}
screenshot(){
    activator send libactivator.system.take-screenshot
    echo Screenshot saved to gallery.
}
increase_audio(){
    activator send libactivator.audio.increase-volume
    echo Audio increased.
}
decrease_audio(){
    activator send libactivator.audio.decrease-volume
    echo Audio decreased.
}
decrease_brightness(){
    activator send libactivator.screen.brightness.decrease
    echo Brightness decreased.
}
increase_brightness(){
    activator send libactivator.screen.brightness.increase
    echo Brightness increased.
}
switcher(){
    activator send libactivator.system.activate-switcher
    echo Switcher activated.
}
clear_switcher(){
    activator send libactivator.system.clear-switcher
    echo App switcher cleared.
}
nc(){
    activator send libactivator.system.activate-notification-center
    echo Notification center opened.
}
answer_call(){
    activator send libactivator.phone.answer-call
    echo Call answered.
}
decline_call(){
    activator send libactivator.phone.disconnect-call
    echo Call declined.
}
first_homepage(){
    activator send libactivator.system.first-springboard-page
    echo homescreen.
}
power_menu(){
    activator send libactivator.system.power-menu
    echo Power menu.
}
siri(){
    activator send libactivator.system.virtual-assistant
    echo Siri.
}
spotlight(){
    activator send libactivator.system.spotlight
    echo Spotlight.
}
safe_mode(){
    activator send libactivator.system.safemode
    echo Safe mode.
}
unlock(){
    activator send libactivator.lockscreen.dismiss
    echo system unlocked.
}
battery(){
    powerlog -Bq  
}
listpkg(){
    dpkg -l | more
}
input(){
    read -p "action : " input
    if [ ! -z "$input" ]; then
        if [[ "$input" =~ ^(exit|quit)$ ]]; then
            exit 0
        fi 
        activities $input
        exit 0
    fi   
    input
}
activities(){
    $1 $2
    input   
}
banner(){
cat << EOF

_  _ _ _  _ ___  _  _ ____    ___  _  _ ____ _  _ 
|\ | | |\/| |__] |  | [__     |  \ |\/| |    |_/  
| \| | |  | |__] |__| ___]    |__/ |  | |___ | \_ 
                                                  

EOF

}
if [ -z "$1" ]; then
    COLLUMN0=30
    COLLUMN1=50
    banner
    printf "\n"
    printf "%$((-${COLLUMN0} + ${COLLUMN1}))s\n" "Usage: nimbus action parameter" 
    printf "%$((${COLLUMN0} + ${COLLUMN1}))s\n" " " | tr ' ' '-'
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "Action" "Description"
    printf "%$((${COLLUMN0} + ${COLLUMN1}))s\n" " " | tr ' ' '-'
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "home" "tap home button"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "powerdown" "power off device"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "sleep" "simulate power button press"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "safe_mode" "launch springboard in safe mode"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "open app.bundle.id" "launch specified app.bundle.id"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "first_homepage" "launch first srpingboard page."
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "spotlight" "launch Spotlight."
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "settings 'name of panel'" "launch settings preference"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "power_menu" "launch power menu"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "nc" "launch notification center"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "cc" "launch control center."
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "siri" "launch siri"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "switcher" "launch app switcher"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "clear_switcher" "clear app switcher"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "screenshot" "make a screenshot."
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "increase_(audio|brightness)" "increase audio or brightness."
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "decrease_(audio|brightness)" "decrease audio or brightness."
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "(answer|decline)_call" "answer or decline a call."    
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "unlock" "unlocks unprotected interface"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "battery" "display battery information"
    printf "%-${COLLUMN0}s %-${COLLUMN1}s\n" "listpkg" "list installed packages"
    if [[ $(type -t nimbus_usage_menu) == function ]]; then
        nimbus_usage_menu
    fi
    printf "%$((${COLLUMN0} + ${COLLUMN1}))s\n" " " | tr ' ' '-'
    printf "%$((-${COLLUMN0} + ${COLLUMN1}))s\n" "ctrl+c|exit|quit" 
    printf "%$((${COLLUMN0} + ${COLLUMN1}))s\n" " " | tr ' ' '-'
    input
else
    activities $1 $2
fi
exit 0


    



